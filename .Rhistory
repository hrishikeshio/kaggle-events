train$user<-as.numeric(train$user)
train$event<-as.numeric(train$event)
train$timestamp<-NULL
train$joinedAt<-NULL
train$hometown<-NULL
train$score<-(train$interested-train$not_interested+2.5)
train$interested<-NULL
train$not_interested<-NULL
train$locale<-as.numeric(factor(train$locale))
train$gender<-ifelse(train$gender=="male",1,train$gender)
train$gender<-ifelse(train$gender=="female",2,train$gender)
train$gender<-ifelse(train$gender=="",2,train$gender)
train$location<-as.numeric(factor(train$location))
train$birthyear[train$birthyear=="None"]<-1980
train$birthyear<-as.integer(as.character(train$birthyear))
train$timezone<-NULL
valid$user<-as.numeric(valid$user)
valid$event<-as.numeric(valid$event)
valid$timestamp<-NULL
valid$joinedAt<-NULL
valid$hometown<-NULL
valid$gender<-ifelse(valid$gender=="male",1,valid$gender)
valid$gender<-ifelse(valid$gender=="female",2,valid$gender)
valid$gender<-ifelse(valid$gender=="",2,valid$gender)
valid$score<-1
valid$location<-as.numeric(factor(valid$location))
valid$locale<-as.numeric(factor(valid$locale))
valid$birthyear[valid$birthyear=="None"]<-1980
valid$birthyear<-as.numeric(as.character(valid$birthyear))
valid$timezone<-NULL
write.csv(train,"traincat.formatted.csv",row.names=FALSE)
write.csv(valid,"validcat.formatted.csv",row.names=FALSE)
rstudio::viewData(train)
write.table(train,"traincat.formatted.csv",row.names=FALSE,col.names=FALSE)
write.table(valid,"validcat.formatted.csv",row.names=FALSE,col.names=FALSE)
write.table(train,"traincat.formatted.csv",row.names=FALSE,col.names=FALSE,sep=",")
rstudio::viewData(train)
library(randomForest)
train<-read.csv("processed/traincat.csv")
valid<-read.csv("processed/testcat.csv")
train$user<-as.numeric(train$user)
train$event<-as.numeric(train$event)
train$timestamp<-NULL
train$joinedAt<-NULL
train$hometown<-NULL
train$score<-(train$interested-train$not_interested+2)
train$interested<-NULL
train$not_interested<-NULL
train$locale<-as.numeric(factor(train$locale))
train$gender<-ifelse(train$gender=="male",1,train$gender)
train$gender<-ifelse(train$gender=="female",2,train$gender)
train$gender<-ifelse(train$gender=="",2,train$gender)
train$location<-as.numeric(factor(train$location))
#train$birthyear[train$birthyear=="None"]<-1980
train$birthyear<-as.integer(as.character(train$birthyear))
rstudio::viewData(train)
train$birthyear[train$birthyear=="None"]<-1990
train$birthyear<-as.integer(as.character(train$birthyear))
train$timezone<-NULL
valid$user<-as.numeric(valid$user)
valid$event<-as.numeric(valid$event)
valid$timestamp<-NULL
valid$joinedAt<-NULL
valid$hometown<-NULL
valid$gender<-ifelse(valid$gender=="male",1,valid$gender)
valid$gender<-ifelse(valid$gender=="female",2,valid$gender)
valid$gender<-ifelse(valid$gender=="",2,valid$gender)
valid$score<-1
valid$location<-as.numeric(factor(valid$location))
valid$locale<-as.numeric(factor(valid$locale))
valid$birthyear[valid$birthyear=="None"]<-1980
valid$birthyear[valid$birthyear=="None"]<-1990
valid$birthyear<-as.numeric(as.character(valid$birthyear))
valid$timezone<-NULL
write.table(train,"traincat.formatted.csv",row.names=FALSE,col.names=FALSE,sep=",")
write.table(valid,"validcat.formatted.csv",row.names=FALSE,col.names=FALSE,sep=",")
library(randomForest)
train<-read.csv("processed/traincat.csv")
valid<-read.csv("processed/testcat.csv")
train$user<-as.numeric(train$user)
train$event<-as.numeric(train$event)
train$timestamp<-NULL
train$joinedAt<-NULL
train$hometown<-NULL
train$score<-(train$interested-train$not_interested+2)
train$interested<-NULL
train$not_interested<-NULL
train$locale<-as.numeric(factor(train$locale))
train$gender<-ifelse(train$gender=="male",1,train$gender)
train$gender<-ifelse(train$gender=="female",2,train$gender)
train$gender<-ifelse(train$gender=="",2,train$gender)
train$location<-as.numeric(factor(train$location))
train$birthyear[train$birthyear=="None"]<-1990
train$birthyear<-2013-as.integer(as.character(train$birthyear))
train$timezone<-NULL
valid$user<-as.numeric(valid$user)
valid$event<-as.numeric(valid$event)
valid$timestamp<-NULL
valid$joinedAt<-NULL
valid$hometown<-NULL
valid$gender<-ifelse(valid$gender=="male",1,valid$gender)
valid$gender<-ifelse(valid$gender=="female",2,valid$gender)
valid$gender<-ifelse(valid$gender=="",2,valid$gender)
valid$score<-1
valid$location<-as.numeric(factor(valid$location))
library(randomForest)
train<-read.csv("processed/traincat.csv")
valid<-read.csv("processed/testcat.csv")
train$user<-as.numeric(train$user)
train$event<-as.numeric(train$event)
train$timestamp<-NULL
train$joinedAt<-NULL
train$hometown<-NULL
train$score<-(train$interested-train$not_interested+2)
train$interested<-NULL
train$not_interested<-NULL
train$locale<-as.numeric(factor(train$locale))
train$gender<-ifelse(train$gender=="male",1,train$gender)
train$gender<-ifelse(train$gender=="female",2,train$gender)
train$gender<-ifelse(train$gender=="",2,train$gender)
train$location<-as.numeric(factor(train$location))
train$birthyear[train$birthyear=="None"]<-1990
train$birthyear<-2013-as.integer(as.character(train$birthyear))
train$timezone<-NULL
valid$user<-as.numeric(valid$user)
valid$event<-as.numeric(valid$event)
valid$timestamp<-NULL
valid$joinedAt<-NULL
valid$hometown<-NULL
valid$gender<-ifelse(valid$gender=="male",1,valid$gender)
valid$gender<-ifelse(valid$gender=="female",2,valid$gender)
valid$gender<-ifelse(valid$gender=="",2,valid$gender)
valid$score<-1
valid$location<-as.numeric(factor(valid$location))
valid$locale<-as.numeric(factor(valid$locale))
valid$birthyear[valid$birthyear=="None"]<-1990
valid$birthyear<-2013-as.numeric(as.character(valid$birthyear))
valid$timezone<-NULL
write.table(train,"traincat.formatted.csv",row.names=FALSE,col.names=FALSE,sep=",")
write.table(valid,"validcat.formatted.csv",row.names=FALSE,col.names=FALSE,sep=",")
#glm<-lm(score~., data=train)
#prediction <- predict(glm, newdata=valid)
#write.table(prediction,"glm.csv",row.names=FALSE)
#rf<-randomForest(score~.,data=train,xtest=valid,na.action=na.omit, importance=TRUE,proximity=TRUE)
#rf<-randomForest(score~.,data=train,xtest=valid,na.action=na.omit, importance=TRUE,proximity=TRUE)
#rf<-randomForest(score~.,data=train,xtest=valid,na.action=na.omit, importance=TRUE,proximity=TRUE)
#rf<-randomForest(score~.,data=train,xtest=valid,na.action=na.omit, importance=TRUE,proximity=TRUE)
#rf<-randomForest(score~.,data=train,xtest=valid,na.action=na.omit, importance=TRUE,proximity=TRUE)
#rf<-randomForest(score~.,data=train,xtest=valid,na.action=na.omit, importance=TRUE,proximity=TRUE)
#rf<-randomForest(score~.,data=train,xtest=valid,na.action=na.omit, importance=TRUE,proximity=TRUE)
#rf<-randomForest(score~.,data=train,xtest=valid,na.action=na.omit, importance=TRUE,proximity=TRUE)
#rf<-randomForest(score~.,data=train,xtest=valid,na.action=na.omit, importance=TRUE,proximity=TRUE)
rstudio::viewData(train)
library(randomForest)
train<-read.csv("processed/traincat.csv")
valid<-read.csv("processed/testcat.csv")
train$user<-as.numeric(train$user)
train$event<-as.numeric(train$event)
train$timestamp<-NULL
train$joinedAt<-NULL
train$hometown<-NULL
train$score<-(train$interested-train$not_interested+2)
train$interested<-NULL
train$not_interested<-NULL
train$locale<-as.numeric(factor(train$locale))
train$gender<-ifelse(train$gender=="male",1,train$gender)
train$gender<-ifelse(train$gender=="female",2,train$gender)
train$gender<-ifelse(train$gender=="",2,train$gender)
train$location<-as.numeric(factor(train$location))
train$birthyear[train$birthyear=="None"]<-1990
train$birthyear<-2013-as.integer(as.character(train$birthyear))
train$timezone<-NULL
valid$user<-as.numeric(valid$user)
valid$event<-as.numeric(valid$event)
valid$timestamp<-NULL
valid$joinedAt<-NULL
valid$hometown<-NULL
valid$gender<-ifelse(valid$gender=="male",1,valid$gender)
valid$gender<-ifelse(valid$gender=="female",2,valid$gender)
valid$gender<-ifelse(valid$gender=="",2,valid$gender)
valid$score<-1
valid$location<-as.numeric(factor(valid$location))
valid$locale<-as.numeric(factor(valid$locale))
valid$birthyear[valid$birthyear=="None"]<-1990
valid$birthyear<-2013-as.numeric(as.character(valid$birthyear))
valid$timezone<-NULL
write.table(train,"traincat.formatted.csv",row.names=FALSE,col.names=FALSE,sep=",")
write.table(valid,"validcat.formatted.csv",row.names=FALSE,col.names=FALSE,sep=",")
#glm<-lm(score~., data=train)
#prediction <- predict(glm, newdata=valid)
#write.table(prediction,"glm.csv",row.names=FALSE)
valid$score<-NULL
#rf<-randomForest(score~.,data=train,xtest=valid,na.action=na.omit, importance=TRUE,proximity=TRUE)
unique(train$location)
unique(valid$location)
unique(c(train$location,valid$location))
library(randomForest)
train<-read.csv("processed/traincat.csv")
valid<-read.csv("processed/testcat.csv")
unique(train$location)
unique(c(train$location,valid$location))
unique(valid$location)
unique(c(train$location,valid$location))
(c(train$location,valid$location))
unique(c(as.character(train$location),as.character(valid$location)))
sorted(unique(c(as.character(train$location),as.character(valid$location))))
sort(unique(c(as.character(train$location),as.character(valid$location))))
train$location<-as.numeric(factor(train$location,levels=locs))
locs<-sort(unique(c(as.character(train$location),as.character(valid$location))))
train$user<-as.numeric(train$user)
train$event<-as.numeric(train$event)
train$timestamp<-NULL
train$joinedAt<-NULL
train$hometown<-NULL
train$score<-(train$interested-train$not_interested+2)
train$interested<-NULL
train$not_interested<-NULL
train$locale<-as.numeric(factor(train$locale))
train$gender<-ifelse(train$gender=="male",1,train$gender)
train$gender<-ifelse(train$gender=="female",2,train$gender)
train$gender<-ifelse(train$gender=="",2,train$gender)
train$location<-as.numeric(factor(train$location,levels=locs))
rstudio::viewData(train)
library(randomForest)
train<-read.csv("processed/traincat.csv")
valid<-read.csv("processed/testcat.csv")
locs<-sort(unique(c(as.character(train$location),as.character(valid$location))))
train$user<-as.numeric(train$user)
train$event<-as.numeric(train$event)
train$timestamp<-NULL
train$joinedAt<-NULL
train$hometown<-NULL
train$score<-(train$interested-train$not_interested+2)
train$interested<-NULL
train$not_interested<-NULL
train$locale<-as.numeric(factor(train$locale))
train$gender<-ifelse(train$gender=="male",1,train$gender)
train$gender<-ifelse(train$gender=="female",2,train$gender)
train$gender<-ifelse(train$gender=="",2,train$gender)
train$location<-as.numeric(factor(train$location,levels=locs))
train$birthyear[train$birthyear=="None"]<-1990
train$birthyear<-2013-as.integer(as.character(train$birthyear))
train$timezone<-NULL
valid$user<-as.numeric(valid$user)
valid$event<-as.numeric(valid$event)
valid$timestamp<-NULL
valid$joinedAt<-NULL
valid$hometown<-NULL
valid$gender<-ifelse(valid$gender=="male",1,valid$gender)
valid$gender<-ifelse(valid$gender=="female",2,valid$gender)
valid$gender<-ifelse(valid$gender=="",2,valid$gender)
valid$score<-1
valid$location<-as.numeric(factor(valid$location,levels=locs))
valid$locale<-as.numeric(factor(valid$locale))
valid$birthyear[valid$birthyear=="None"]<-1990
valid$birthyear<-2013-as.numeric(as.character(valid$birthyear))
valid$timezone<-NULL
write.table(train,"traincat.formatted.csv",row.names=FALSE,col.names=FALSE,sep=",")
write.table(valid,"validcat.formatted.csv",row.names=FALSE,col.names=FALSE,sep=",")
#glm<-lm(score~., data=train)
#prediction <- predict(glm, newdata=valid)
#write.table(prediction,"glm.csv",row.names=FALSE)
valid$score<-NULL
#rf<-randomForest(score~.,data=train,xtest=valid,na.action=na.omit, importance=TRUE,proximity=TRUE)
locas<-sort(unique(c(as.character(train$locale),as.character(valid$locale))))
fix(locas)
train<-read.csv("processed/traincat.csv")
valid<-read.csv("processed/testcat.csv")
locs<-sort(unique(c(as.character(train$location),as.character(valid$location))))
locas<-sort(unique(c(as.character(train$locale),as.character(valid$locale))))
fix(locas)
tzs<-sort(unique(c(as.character(train$timezone),as.character(valid$timezone))))
fix(tzs)
library(randomForest)
train<-read.csv("processed/traincat.csv")
valid<-read.csv("processed/testcat.csv")
locs<-sort(unique(c(as.character(train$location),as.character(valid$location))))
locas<-sort(unique(c(as.character(train$locale),as.character(valid$locale))))
tzs<-sort(unique(c(as.character(train$timezone),as.character(valid$timezone))))
train$user<-as.numeric(train$user)
train$event<-as.numeric(train$event)
train$timestamp<-NULL
train$joinedAt<-NULL
train$hometown<-NULL
train$score<-(train$interested-train$not_interested+2)
train$interested<-NULL
train$not_interested<-NULL
train$locale<-as.numeric(factor(train$locale,levels=locas))
train$gender<-ifelse(train$gender=="male",1,train$gender)
train$gender<-ifelse(train$gender=="female",2,train$gender)
train$gender<-ifelse(train$gender=="",2,train$gender)
train$location<-as.numeric(factor(train$location,levels=locs))
train$birthyear[train$birthyear=="None"]<-1990
train$birthyear<-2013-as.integer(as.character(train$birthyear))
train$timezone<-as.numeric(factor(train$timezone,levels=tzs))
valid$user<-as.numeric(valid$user)
valid$event<-as.numeric(valid$event)
valid$timestamp<-NULL
valid$joinedAt<-NULL
valid$hometown<-NULL
valid$gender<-ifelse(valid$gender=="male",1,valid$gender)
valid$gender<-ifelse(valid$gender=="female",2,valid$gender)
valid$gender<-ifelse(valid$gender=="",2,valid$gender)
valid$score<-1
valid$location<-as.numeric(factor(valid$location,levels=locs))
valid$locale<-as.numeric(factor(valid$locale,levels=locas))
valid$birthyear[valid$birthyear=="None"]<-1990
valid$birthyear<-2013-as.numeric(as.character(valid$birthyear))
valid$timezone<-as.numeric(factor(valid$timezone,levels=tzs))
rstudio::viewData(train)
train<-read.csv("processed/traincat.csv")
valid<-read.csv("processed/testcat.csv")
rstudio::viewData(train)
library(randomForest)
train<-read.csv("processed/traincat.csv")
valid<-read.csv("processed/testcat.csv")
locs<-sort(unique(c(as.character(train$location),as.character(valid$location))))
locas<-sort(unique(c(as.character(train$locale),as.character(valid$locale))))
tzs<-sort(unique(c(as.character(train$timezone),as.character(valid$timezone))))
train$user<-as.numeric(train$user)
train$event<-as.numeric(train$event)
train$timestamp<-NULL
train$joinedAt<-NULL
train$hometown<-NULL
train$score<-(train$interested-train$not_interested+2)
train$interested<-NULL
train$not_interested<-NULL
train$locale<-as.numeric(factor(train$locale,levels=locas))
train$gender<-ifelse(train$gender=="male",1,train$gender)
train$gender<-ifelse(train$gender=="female",2,train$gender)
train$gender<-ifelse(train$gender=="",2,train$gender)
train$location<-as.numeric(factor(train$location,levels=locs))
train$birthyear[train$birthyear=="None"]<-1990
train$birthyear<-2013-as.integer(as.character(train$birthyear))
train$timezone<-as.numeric(factor(train$timezone,levels=tzs))
valid$user<-as.numeric(valid$user)
valid$event<-as.numeric(valid$event)
valid$timestamp<-NULL
valid$joinedAt<-NULL
valid$hometown<-NULL
valid$gender<-ifelse(valid$gender=="male",1,valid$gender)
valid$gender<-ifelse(valid$gender=="female",2,valid$gender)
valid$gender<-ifelse(valid$gender=="",2,valid$gender)
valid$score<-1
valid$location<-as.numeric(factor(valid$location,levels=locs))
valid$locale<-as.numeric(factor(valid$locale,levels=locas))
valid$birthyear[valid$birthyear=="None"]<-1990
valid$birthyear<-2013-as.numeric(as.character(valid$birthyear))
valid$timezone<-as.numeric(factor(valid$timezone,levels=tzs))
write.table(train,"traincat.formatted.csv",row.names=FALSE,col.names=FALSE,sep=",")
write.table(valid,"validcat.formatted.csv",row.names=FALSE,col.names=FALSE,sep=",")
#glm<-lm(score~., data=train)
#prediction <- predict(glm, newdata=valid)
#write.table(prediction,"glm.csv",row.names=FALSE)
valid$score<-NULL
#rf<-randomForest(score~.,data=train,xtest=valid,na.action=na.omit, importance=TRUE,proximity=TRUE)
#rf<-randomForest(score~.,data=train,xtest=valid,na.action=na.omit, importance=TRUE,proximity=TRUE)
is.na(train)
summary(train)
library(randomForest)
train<-read.csv("processed/traincat.csv")
valid<-read.csv("processed/testcat.csv")
library(randomForest)
summary(train)
train$timezone[is.na(train$timezone)]
train$timezone[is.na(train$timezone)]<-420
summary(train)
library(randomForest)
train<-read.csv("processed/traincat.csv")
valid<-read.csv("processed/testcat.csv")
rstudio::viewData(train)
locs<-sort(unique(c(as.character(train$location),as.character(valid$location))))
locas<-sort(unique(c(as.character(train$locale),as.character(valid$locale))))
tzs<-sort(unique(c(as.character(train$timezone),as.character(valid$timezone))))
summary(tzs)
library(randomForest)
train<-read.csv("processed/traincat.csv")
valid<-read.csv("processed/testcat.csv")
locs<-sort(unique(c(as.character(train$location),as.character(valid$location))))
locas<-sort(unique(c(as.character(train$locale),as.character(valid$locale))))
tzs<-sort(unique(c(as.character(train$timezone),as.character(valid$timezone))))
train$user<-as.numeric(train$user)
train$event<-as.numeric(train$event)
train$timestamp<-NULL
train$joinedAt<-NULL
train$hometown<-NULL
train$score<-(train$interested-train$not_interested+2)
train$interested<-NULL
train$not_interested<-NULL
train$locale<-as.numeric(factor(train$locale,levels=locas))
train$gender<-ifelse(train$gender=="male",1,train$gender)
train$gender<-ifelse(train$gender=="female",2,train$gender)
train$gender<-ifelse(train$gender=="",2,train$gender)
train$location<-as.numeric(factor(train$location,levels=locs))
train$birthyear[train$birthyear=="None"]<-1993
train$birthyear<-2013-as.integer(as.character(train$birthyear))
train$timezone[is.na(train$timezone)]<-"420"
train$timezone<-as.numeric(factor(train$timezone,levels=tzs))
valid$user<-as.numeric(valid$user)
valid$event<-as.numeric(valid$event)
valid$timestamp<-NULL
valid$joinedAt<-NULL
valid$hometown<-NULL
valid$gender<-ifelse(valid$gender=="male",1,valid$gender)
valid$gender<-ifelse(valid$gender=="female",2,valid$gender)
valid$gender<-ifelse(valid$gender=="",2,valid$gender)
valid$score<-1
valid$location<-as.numeric(factor(valid$location,levels=locs))
valid$locale<-as.numeric(factor(valid$locale,levels=locas))
valid$birthyear[valid$birthyear=="None"]<-1993
valid$birthyear<-2013-as.numeric(as.character(valid$birthyear))
valid$timezone[is.na(valid$timezone)]<-"420"
valid$timezone<-as.numeric(factor(valid$timezone,levels=tzs))
write.table(train,"traincat.formatted.csv",row.names=FALSE,col.names=FALSE,sep=",")
write.table(valid,"validcat.formatted.csv",row.names=FALSE,col.names=FALSE,sep=",")
events<-read.csv("raw/events3.csv")
summary(events)
events$event_id<-factor(events$event_id)
summary(events)
events$event_id==1918771225
events[events$event_id==1918771225]
events$event_id[events$event_id==1918771225]
events$location[events$event_id==1918771225]
events[events$event_id==1918771225,]
?merge
ntrain<-merge(train,events,by.x="event",by.y="event_id")
rstudio::viewData(ntrain)
ntrain<-merge(train,events,by.x="event",by.y="event_id", all.x=TRUE)
ntrain<-merge(train,events,by.x="event",by.y="event_id", all.x=TRUE, all.y=F)
ntrain<-merge(train,events,by.x="event",by.y="event_id", all.x=TRUE, all.y=FALSE)
class(train$event)
class(events$event_id)
events$event_id<-as.numeric(events$event_id)
events<-read.csv("raw/events3.csv")
ntrain<-merge(train,events,by.x="event",by.y="event_id", all.x=TRUE, all.y=FALSE)
nvalid<-merge(valid,events,by.x="event",by.y="event_id", all.x=TRUE, all.y=FALSE)
rstudio::viewData(nvalid)
nvalid[-1,]
nvalid[10239,]
ntrain<-merge(train,events,by.x="event")
ntrain<-merge(train,events,by.x="event",by.y="event_id")
ntrain<-merge(train,events,by.x="event",by.y="event_id",all.x=F)
ntrain<-merge(train,events,by.x="event",by.y="event_id",all.x=F,all.y=F)
ntrain<-merge(train,events,by.x="event",by.y="event_id",all=F)
ntrain<-merge(train,events,by.x="event",by.y="event_id",all=F, incomparables=NA)
summary(ntrain)
ntrain$event<-factor(ntrain$event)
summary(ntrain)
rstudio::viewData(ntrain)
rstudio::viewData(events)
library(randomForest)
train<-read.csv("processed/traincat.csv")
valid<-read.csv("processed/testcat.csv")
locs<-sort(unique(c(as.character(train$location),as.character(valid$location))))
locas<-sort(unique(c(as.character(train$locale),as.character(valid$locale))))
tzs<-sort(unique(c(as.character(train$timezone),as.character(valid$timezone))))
#train$location<-as.character(train$location)
#train$country<-tail(unlist(strsplit(train$location," ")),1)
train$user<-as.numeric(train$user)
train$event<-as.numeric(train$event)
train$timestamp<-NULL
train$joinedAt<-NULL
train$hometown<-NULL
train$score<-(train$interested-train$not_interested+2)
train$interested<-NULL
train$not_interested<-NULL
train$locale<-as.numeric(factor(train$locale,levels=locas))
train$gender<-ifelse(train$gender=="male",1,train$gender)
train$gender<-ifelse(train$gender=="female",2,train$gender)
train$gender<-ifelse(train$gender=="",2,train$gender)
train$location<-as.numeric(factor(train$location,levels=locs))
train$birthyear[train$birthyear=="None"]<-1993
train$birthyear<-2013-as.integer(as.character(train$birthyear))
train$timezone[is.na(train$timezone)]<-"420"
train$timezone<-as.numeric(factor(train$timezone,levels=tzs))
valid$user<-as.numeric(valid$user)
valid$event<-as.numeric(valid$event)
valid$timestamp<-NULL
valid$joinedAt<-NULL
valid$hometown<-NULL
valid$gender<-ifelse(valid$gender=="male",1,valid$gender)
valid$gender<-ifelse(valid$gender=="female",2,valid$gender)
valid$gender<-ifelse(valid$gender=="",2,valid$gender)
valid$score<-1
valid$location<-as.numeric(factor(valid$location,levels=locs))
valid$locale<-as.numeric(factor(valid$locale,levels=locas))
valid$birthyear[valid$birthyear=="None"]<-1993
valid$birthyear<-2013-as.numeric(as.character(valid$birthyear))
valid$timezone[is.na(valid$timezone)]<-"420"
valid$timezone<-as.numeric(factor(valid$timezone,levels=tzs))
events<-read.csv("raw/events3.csv")
events$start_time<-NULL
events$lat<-NULL
events$lng<-NULL
events$country<-as.numeric(as.factor(events$country))
events$state<-as.numeric(as.factor(events$state))
events$zip<-as.numeric(as.factor(events$zip))
events$city<-as.numeric(as.factor(events$city))
nevents<-events[!duplicated(events$event_id),]
ntrain<-merge(train,events,by.x="event",by.y="event_id", all.x=TRUE, all.y=FALSE)
rstudio::viewData(events)
rstudio::viewData(ntrain)
rstudio::viewData(train)
ntrain<-merge(train,events,by.x="event",by.y="event_id", all.x=FALSE, all.y=FALSE)
ntrain<-merge(train,events,by.x="event",by.y="event_id", all.x=FALSE, all.y=FALSE)
nvalid<-merge(valid,events,by.x="event",by.y="event_id", all.x=TRUE, all.y=FALSE)
ntrain
write.table(ntrain,"ntraincat.formatted.csv",row.names=FALSE,col.names=FALSE,sep=",")
write.table(nvalid,"nvalidcat.formatted.csv",row.names=FALSE,col.names=FALSE,sep=",")
rstudio::viewData(nvalid)
rstudio::viewData(nvalid)
rstudio::viewData(valid)
